// AQL query to execute IN arangodb QUERIES
// or /usr/bin/arangosh on DB host machine
// to create edges between editor and publication nodes

// FOR pub IN publication
//     FOR e IN editor
//         FILTER LENGTH(pub.editor) > 0
//         FOR edit IN pub.editor
//             FILTER edit == e.name
//             INSERT { _from:             e._id,
//                     _to:               pub._id, 
//                     label:             "publication_is_edited_by_editor",
//                     editor_name:       e.name,
//                     publication_title: pub.title,
//                     publication_year:  pub.year,
//                     first_author:      pub.author[0] == null ? "" : pub.author[0],
//                     weight:            4 } INTO "editor-publication"

FOR pub IN publication
    FOR e IN editor
        FILTER LENGTH(pub.editor) > 0 AND e.name IN pub.editor
        INSERT { _from:             e._id,
                _to:               pub._id, 
                label:             "publication_is_edited_by_editor",
                editor_name:       e.name,
                publication_title: pub.title,
                publication_year:  pub.year,
                first_author:      pub.author[0] == null ? "" : pub.author[0],
                weight:            4 } INTO "editor-publication"

FOR edi IN editor
    UPDATE edi WITH { graph_name: edi.name } IN editor

FOR pub IN publication
    FOR e IN editor
        FILTER LENGTH(pub.editor) > 0 AND e.name IN pub.editor
        INSERT { _from:            pub._id,
                _to:               e._id, 
                label:             "editor_has_edited_publication",
                editor_name:       e.name,
                publication_title: pub.title,
                publication_year:  pub.year,
                first_author:      pub.author[0] == null ? "" : pub.author[0],
                weight:            4 } INTO "editor-publication"

// remove duplicate edges @coll: "editor-publication"
FOR e1 IN @@coll
    FOR e2 IN @@coll
        FILTER e1._from == e2._from AND e1._to == e2._to AND e1._key > e2._key
        UPDATE e1 WITH { temp: "delete" } IN @@coll

FOR e in @@coll
    FILTER e.temp == "delete"
    REMOVE e IN @@coll